#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: PHICOMM K2P

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: "SSH connection to Actions"
        required: false
        default: "false"
  schedule:
    - cron: 0 22 * * * # 每天编译一次, 时间为北京时间0:00

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/MIPS/K2P.config
  DIY_P1_SH: scripts/diy-part1.sh
  DIY_P2_SH: scripts/diy-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_WETRANSFER: true
  UPLOAD_WWS: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    name: 编译k2p固件
    runs-on: ubuntu-20.04

    steps:
      - name: 检查
        uses: actions/checkout@v3.0.0

      - name: 初始化编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: 拉取源码
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: 加载基础配置
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          chmod +x $DIY_P1_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P1_SH

      - name: 更新软件包
        run: cd openwrt && ./scripts/feeds update -a

      - name: 安装软件包
        run: cd openwrt && ./scripts/feeds install -a

      - name: 加载自定义配置
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          cat config/MIPS/MIPS-extra.config >> openwrt/.config
          chmod +x $DIY_P2_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P2_SH

      - name: 下载编译包
        id: package
        run: |
          cd openwrt
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: 开始编译
        id: compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo "::set-output name=status::success"
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: 检查占用空间
        if: (!cancelled())
        run: df -hT

      - name: 上传源码文件
        uses: actions/upload-artifact@main
        if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
        with:
          name: openwrt-bin-${{ env.DEVICE_NAME }}-${{ env.FILE_DATE }}
          path: openwrt/bin

      - name: 获取固件
        id: manage
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: 上传固件至Actions
        uses: actions/upload-artifact@main
        if: steps.manage.outputs.status == 'success' && !cancelled()
        with:
          name: openwrt-firmware-${{ env.DEVICE_NAME }}-${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}

      - name: 上传固件至wetransfer
        id: wetransfer
        if: steps.manage.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progess ${FIRMWARE} 2>&1 | TEE wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
          echo "::set-output name=url::$(cat wss.log | grep https | cut -f3 -d" ")"

      - name: 上传固件至文叔叔
        id: wss
        if: steps.manage.outputs.status == 'success' && env.UPLOAD_WSS == 'true' && !cancelled()
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wss -s -p 16 --no-progess ${FIRMWARE} 2>&1 | TEE wss.log
          echo "::warning file=wenshushu.cn::$(cat wetransfer.log | grep https)"
          echo "::set-output name=url::$(cat wss.log | grep https | cut -f3 -d" ")"

      - name: 生成tag
        id: tag
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        run: |
          echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
          touch release.txt
          [ $env.UPLOAD_WETRANSFER = true ] && echo "🔗 [Wetransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
          [ $env.UPLOAD_WSS = true ] && echo "🔗 [文叔叔](${{ steps.wss.outputs.url }})" >> release.txt
          echo "::set-output name=status::success"

      - name: 发布固件
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.FIRMWARE }}/*

      - name: 结束编译
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 30
          keep_minimum_runs: 5

      # - name: 移除旧发行版固件
      #   uses: dev-drprasad/delete-older-releases@v0.1.0
      #   if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      #   with:
      #     keep_latest: 20
      #     delete_tags: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
